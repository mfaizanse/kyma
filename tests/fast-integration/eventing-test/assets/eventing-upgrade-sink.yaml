apiVersion: serverless.kyma-project.io/v1alpha2
kind: Function
metadata:
  labels:
    serverless.kyma-project.io/build-resources-preset: local-dev
    serverless.kyma-project.io/function-resources-preset: S
    serverless.kyma-project.io/replicas-preset: S
  name: eventing-upgrade-sink
spec:
  scaleConfig:
    minReplicas: 1
    maxReplicas: 1
  runtime: nodejs18
  resourceConfiguration:
    function:
      resources:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
    build:
      resources:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
  source:
    inline:
      dependencies: |
        {
          "name": "events",
          "version": "1.0.0",
          "dependencies": {
            "axios": "^0.19.2"
          }
        }
      source: |
        let receivedEvents = {};
        let returnError = false;
        const axios = require('axios');
        function cloudEventHeaders(event) {
          return Object.keys(event).reduce((accumulator, current) => {
            if (current.startsWith('ce-')) {
              accumulator[current] = event[current]
            }
            return accumulator;
          }, {});
        }
        function dump(obj) {
          console.dir(obj, {depth: null});
        }
        module.exports = {
          main: async function (event, context) {
            if (event.extensions.request.query.eventid) {
              // Send a request with param eventid=<id> to fetch an received event.
              console.log("Searching and returning event with id: ", event.extensions.request.query.eventid);
              result = receivedEvents[event.extensions.request.query.eventid]
              if (result) {
                console.log("event found with id: ", event.extensions.request.query.eventid);
                return { success: true, event:result};
              }
              console.log("event NOT found with id: ", event.extensions.request.query.eventid);
              return { success: false};
            } else if (event.extensions.request.query.returnError){
              // Set this sink to return errors to events.
              console.log("Setting this sink to return errors:", event.extensions.request.query.returnError);
              returnError = event.extensions.request.query.returnError;
              console.log("returnError:", returnError);
              return { success: true }
            } else if (event["ce-type"]){
              if (returnError) {
                // return error
                console.log("Returning error to in-app event:", event["ce-type"], ", id: ", event["ce-id"]);
                event.setResponseStatus(500);
                return { success: false }
              }
              // Store all valid received events.
              console.log("Got in-app event:", event["ce-type"], ", id: ", event["ce-id"]);
              savedFormat = { ceHeaders: cloudEventHeaders(event), payload: event.data, headers: event.extensions.request.headers }
              receivedEvents[event["ce-id"]] = savedFormat;
              return { success: true }
            }
          }
        }
---
apiVersion: gateway.kyma-project.io/v1beta1
kind: APIRule
metadata:
  name: eventing-upgrade-sink
spec:
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  rules:
    - path: /function
      methods: ["GET", "POST"]
      accessStrategies:
        - handler: allow
          config: {}
    - path: /.*
      methods: ["GET", "POST"]
      accessStrategies:
        - handler: allow
          config: {}
  host: eventing-upgrade-sink
  service:
    name: eventing-upgrade-sink
    port: 80
